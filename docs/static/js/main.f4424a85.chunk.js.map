{"version":3,"sources":["components/AddCategory.jsx","services/getGifs.js","components/GifGridItem.jsx","components/GifGrid.jsx","hooks/useFetchGifs.js","GifExpertApp.jsx","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cat","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"uMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACVC,mBAAS,IADC,mBACvCC,EADuC,KAC3BC,EAD2B,KAe9C,OACI,0BAAMC,SATW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAACS,GAAD,OAAUP,GAAV,mBAAyBO,OACvCN,EAAc,OAMd,2BAAOO,KAAM,OAAQC,MAAOT,EAAYU,SAdzB,SAACP,GACpBF,EAAcE,EAAEQ,OAAOF,Y,uBCPlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAClDH,GAFe,+DAIAI,MAAMF,GAJN,cAIbG,EAJa,gBAKIA,EAAKC,OALT,uBAKXC,EALW,EAKXA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC3B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXvB,kBAeZM,GAfY,4CAAH,sDCEPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACrC,OACI,yBAAKc,UAAW,0CACZ,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,KCFHO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDb,SAACA,GAAc,IAAD,EACZd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAgBtC,OAVAC,qBAAU,WACFvB,GACAD,EAAQC,GAAUwB,MAAK,SAACC,GAAD,OACnBH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAGtB,CAACpB,IAEGqB,EDd2BK,CAAa1B,GAAjCa,EADuB,EAC7BN,KAAca,EADe,EACfA,QAEtB,OACI,oCACI,wBAAIJ,UAAW,qCAAsChB,GACpDoB,GAAW,uBAAGJ,UAAW,oCAAd,WACZ,yBAAKA,UAAW,aACXH,EAAOJ,KAAI,SAACC,GAAD,OACR,kBAAC,EAAD,eAAaiB,IAAKjB,EAAIC,IAAQD,UEQnCkB,EAjBM,WAAO,IAAD,EACa1C,mBAAS,CAAC,cADvB,mBAChB2C,EADgB,KACJ5C,EADI,KAGvB,OACI,oCACI,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BACA,4BACK4C,EAAWpB,KAAI,SAACf,GAAD,OACZ,kBAAC,EAAD,CAASiC,IAAKjC,EAAKM,SAAUN,UCRjDoC,IAASC,OAAO,kBAAC,EAAD,MAAkBC,SAASC,eAAe,U","file":"static/js/main.f4424a85.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n    const [inputValue, setInputValue] = useState(\"\");\r\n\r\n    const handleOnChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (inputValue.trim().length > 2) {\r\n            setCategories((cat) => [inputValue, ...cat]);\r\n            setInputValue(\"\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input type={\"text\"} value={inputValue} onChange={handleOnChange} />\r\n        </form>\r\n    );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired,\r\n};\r\n","export const getGifs = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\r\n        category\r\n    )}&limit=10&api_key=Z0wDDjN6UnWfoJJvmbDESNLwW0vwATQE`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map((img) => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url,\r\n        };\r\n    });\r\n\r\n    return gifs;\r\n};\r\n","import React from \"react\";\r\n\r\nexport const GifGridItem = ({ id, title, url }) => {\r\n    return (\r\n        <div className={\"card animate__animated animate__fadeIn\"}>\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\nimport { GifGridItem } from \"./GifGridItem\";\r\n\r\nexport const GifGrid = ({ category }) => {\r\n    const { data: images, loading } = useFetchGifs(category); //data: images para renombrar la desestructuracion\r\n\r\n    return (\r\n        <>\r\n            <h3 className={\"animate__animated animate__fadeIn\"}>{category}</h3>\r\n            {loading && <p className={\"animate__animated animate__flash\"}>Loading</p>}\r\n            <div className={\"card-grid\"}>\r\n                {images.map((img) => (\r\n                    <GifGridItem key={img.id} {...img}></GifGridItem>\r\n                ))}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport { getGifs } from \"../services/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true,\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (category)\r\n            getGifs(category).then((imgs) =>\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false,\r\n                })\r\n            );\r\n    }, [category]);\r\n\r\n    return state;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport { GifGrid } from \"./components/GifGrid\";\r\n\r\nconst GifExpertApp = () => {\r\n    const [categories, setCategories] = useState([\"One Punch\"]);\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories}></AddCategory>\r\n            <hr />\r\n            <ol>\r\n                {categories.map((cat) => (\r\n                    <GifGrid key={cat} category={cat} />\r\n                ))}\r\n            </ol>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default GifExpertApp;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nimport GifExpertApp from \"./GifExpertApp\";\n\nReactDOM.render(<GifExpertApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}